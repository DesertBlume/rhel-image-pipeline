---
- name: Configure RHEL DNS Server with Static IP, DNS Zones, and Firewall
  hosts: all
  become: yes

  vars:
    dns_domain: "example48.lab"
    ip_static: "172.16.30.48"
    ip_netmask: "255.255.0.0"
    hostname_fqdn: "haja0013-SRV.example48.lab"
    ip_ftp: "172.16.32.48"
    rev_zone_file: "30.16.172.zone"
    fwd_zone_file: "{{ dns_domain }}.zone"
    lab_user: "lab"
    lab_pass: "$6$rounds=100000$abcdefg$3dE3RZKAbFJ9j6HlmiUqMyK7eO3XYDKVPGOR0LTLokhBtVUS6C6dx9auEt8cKy7Z2.4EDK1Ut58x5PXFjKUYP."

  tasks:

  - name: Set system hostname
    ansible.builtin.hostname:
      name: "{{ hostname_fqdn }}"

  - name: Configure static IP address
    ansible.builtin.template:
      src: ifcfg-ens192.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-ens192

  - name: Restart NetworkManager
    ansible.builtin.service:
      name: NetworkManager
      state: restarted

  - name: Install required packages (DNS, SSH, iptables)
    ansible.builtin.dnf:
      name:
        - bind
        - bind-utils
        - openssh-server
        - iptables-services
      state: present

  - name: Enable and start SSH
    ansible.builtin.service:
      name: sshd
      enabled: true
      state: started

  - name: Create lab user with sudo access
    ansible.builtin.user:
      name: "{{ lab_user }}"
      password: "{{ lab_pass }}"
      groups: wheel
      shell: /bin/bash
      state: present

  - name: Configure iptables rules
    ansible.builtin.copy:
      dest: /etc/sysconfig/iptables
      content: |
        *filter
        :INPUT ACCEPT [0:0]
        :FORWARD ACCEPT [0:0]
        :OUTPUT ACCEPT [0:0]
        -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
        -A INPUT -p tcp --dport 22 -j ACCEPT
        -A INPUT -p tcp --dport 53 -j ACCEPT
        -A INPUT -p udp --dport 53 -j ACCEPT
        -A INPUT -i lo -j ACCEPT
        -A INPUT -j DROP
        COMMIT

  - name: Enable and start iptables
    ansible.builtin.service:
      name: iptables
      enabled: true
      state: started

  - name: Deploy named.conf for BIND
    ansible.builtin.template:
      src: named.conf.j2
      dest: /etc/named.conf

  - name: Deploy forward zone file
    ansible.builtin.copy:
      dest: "/var/named/{{ fwd_zone_file }}"
      content: |
        $TTL 86400
        @   IN  SOA ns1.{{ dns_domain }}. root.{{ dns_domain }}. (
                2025061401 ; Serial
                3600       ; Refresh
                1800       ; Retry
                604800     ; Expire
                86400 )    ; Minimum

            IN  NS  ns1.{{ dns_domain }}.
        ns1 IN  A   {{ ip_static }}
        ftp IN  A   {{ ip_ftp }}

  - name: Deploy reverse zone file
    ansible.builtin.copy:
      dest: "/var/named/{{ rev_zone_file }}"
      content: |
        $TTL 86400
        @   IN  SOA ns1.{{ dns_domain }}. root.{{ dns_domain }}. (
                2025061401 ; Serial
                3600       ; Refresh
                1800       ; Retry
                604800     ; Expire
                86400 )    ; Minimum

            IN  NS  ns1.{{ dns_domain }}.
        48  IN  PTR ns1.{{ dns_domain }}.

  - name: Set correct permissions on forward zone
    ansible.builtin.file:
      path: "/var/named/{{ fwd_zone_file }}"
      owner: named
      group: named
      mode: '0644'

  - name: Set correct permissions on reverse zone
    ansible.builtin.file:
      path: "/var/named/{{ rev_zone_file }}"
      owner: named
      group: named
      mode: '0644'

  - name: Enable and start named (DNS)
    ansible.builtin.service:
      name: named
      enabled: true
      state: started
